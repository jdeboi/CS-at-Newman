% Chapter Template

\chapter{Newman Past and Present} % Main chapter title

\label{Chapter2} % Change X to a consecutive number; for referencing this chapter elsewhere, use \ref{ChapterX}

\lhead{Chapter 2. \emph{Newman Past and Present}} % Change X to a consecutive number; this is for the header on each page - perhaps a shortened title


%----------------------------------------------------------------------------------------
\section{Previous Programs}
The inclusion, dissolution, and subsequent reemergence of computer science in secondary education is not unique to Newman. As Kafai and Burke ~\cite{backtoschool} point out, in the 1980s many schools featured Basic or Logo programming, but by the mid 90s, CS was on the decline. Kafai and Burke point to the lack of subject-matter integration, difficulty finding qualified instructors, and rise of the internet precipitating a shift of emphasis from programming to software-specific proficiency and web surfing literacy. They argue that several significant changes, such as the plethora of fun and engaging coding sites with self-guided, online curriculum, are responsible for a resurgance in CS education. In addition, they point to ``a shift from tools to communities." Sites like Scratch operates much like a social networking site that facilitates content sharing and open source exchange \cite{backtoschool}.



\section{Present Status}
% LOWER SCHOOL -------------------------------------------
\subsection{Lower School}
\textbf{Coding Already Happening} \par
Exposure to coding in Lower School currently takes place during Media. Susie Toso meets with grades 1-4 once per week for 50 minutes. 
\begin{definition}
\item [2nd] Code.org
\item [3rd] Scratch
\item [4th] Computer literacy: keyboarding (Typing Pal, which is currently the perview of the homeroom; 2x week for 10 minutes)
\end{definition}
Jennifer Williams and Elaine Sevin offer a collaborative 2nd/5th grade LEGO WeDo robotics unit that meets once per month for 50 minutes. The excerise, to control a soccer player and kick a ball into a LEGO goal, simulates real life phenonmenon through LEGOs and code. Students are introduced to CS topics such as abstraction, problem deconstruction, and serialization of tasks. While this robotics exposure is a valuable and highly-engaging engineering exercise that clearly augments LS coding curriculum, additional time is required to convey foundational CS topics. \par
Finally, programmable hardware is used in 2nd grade science. During the Mars unit, students program Bee-Bots, small robots for teaching sequencing and problem solving. \par

\textbf{LS Faculty Brainstorm} \par
A facilitated brainstorm during an afternoon faculty meeting helped to elicit thoughts and concerns from all Lower School teachers regarding both computer literacy and coding. Faculty divided into groups based on a grade and answered the following questions on Post-its: \par
\begin{definition}
	\item [Q1.] How is technology used in your classroom?
\item [Q2.] What do you wish/ think your students should know that they currently don't about coding and computer literacy?
\item [Q3.] What are your hopes and dreams for computing? 
\item [Q4.] What are your concerns about implementing coding curriculum at Newman?
\end{definition}
A table of all of the responses can be found in Appendix [insert]. There were a handful of recurring ideas that emerged across all grades. LS teachers were concerned about the balance of coding vs. computer literacy, specifically that the rise of coding came at the cost of students' ability to effectively operate computers in class. Additional proficiency and knowledge of word processing, internet research, internet safety and ethics, file structure, keyboarding, and troubleshooting were some of the most common responses to questions two and three. \par
As for question four - concerns related specifically to implenting coding curriculum - teachers overwhelmingly cited the need for CS professional development. The issue of time was also raised multiple times: how will CS fit into the existing schedule, and what will be sacraficed to make room for this new subject? \par

\textbf{Meeting Benchmarks} \par
The CSTA benchmarks, found in Appendix \ref{AppendixCSTA}, are the most highly cited and comprehensive CS standards, especially for grades K-6. Many of the CSTA benchmarks are already met by Newman's existing curriculum. Discussed below are coding and computer literacy benchmarks less likely to be covered by default. \par
In grades K-2, CSTA places emphasis on computer literacy, multimedia exposure, and computational thinking. The ability to break large problems into discrete steps, to think sequentially, and to sort information are the core of the coding/computational thinking standards. The computer literacy benchmarks are perhaps more vague - to effectively use computer input/output devices and conduct research an in age-appropriate way. \par
Selected CSTA K-2 benchmarks:
\begin{definition}
	\item [CODING]
	\item [L0CP04]	Construct a set of statements to be acted out to accomplish a simple task (e.g., turtle instructions).  
	\item [L0CT02]	Use writing tools, digital cameras, and drawing tools to illustrate thoughts, ideas, and stories in a step-by-step manner.
	\item [L0CT03]	Understand how to arrange (sort) information into useful order, such as sorting students by birth date, without using a computer.
	\item [COMPUTER LITERACY]
	\item [L0CD01]	Use standard input and output devices to successfully operate computers and related technologies.
	\item [L0CP01]	Use technology resources to conduct age-appropriate research.
\end{definition}
In grades 3-6, coding standards include the ability to implement problem solutions using block-based programming like Scratch, to understand and develop simple algorithms, and to break up larger problems into sub-problems. Computer literacy standards echo many subjects that arose during the LS brainstorm: proficiency with word processing, email, keyboarding, troubleshooting, internet safety and ethics, and web searching. \par 
Selected CSTA standards for grades 3-6:
\begin{definition}
	\item [CODING]
	\item [L1CP05]	Construct a program as a set of step-by-step instructions to be acted out.
	\item [L1CP06]	Implement problem solutions using a blockbased visual programming language. 
	\item [L1CT01]	Understand and use the basic steps in algorithmic problem-solving (e.g., problem statement and exploration, examination of sample instances, design, implementation, and testing).
	\item [L1CT02]	Develop a simple understanding of an algorithm (e.g., search, sequence of events, or sorting) using computer-free exercises.
	\item [L1CT05]	Make a list of sub-problems to consider while addressing a larger problem.
	\item [COMPUTER LITERACY] 
	\item [L1C01]	Use productivity technology tools (e.g., word processing, spreadsheet, presentation software) for individual and collaborative writing, communication, and publishing activities. 
	\item [L1C02]	Use online resources (e.g., email, online discussions, collaborative web environments) to participate in collaborative problemsolving activities for the purpose of developing solutions or products.
	\item [L1CD1]	Demonstrate an appropriate level of proficiency with keyboards and other input and output devices
	\item [L1CD3]	Apply strategies for identifying simple hardware and software problems that may occur during use.
	\item [L1CI01]	Discuss basic issues related to responsible use of technology and information, and the consequences of inappropriate use.
	\item [L1CI02]	Identify the impact of technology (e.g., social networking, cyber bullying, mobile computing and communication, web technologies, cyber security, and virtualization) on personal life and society.
	\item [L1CI03]	Evaluate the accuracy, relevance, appropriateness, comprehensiveness, and biases that occur in electronic information sources.
	\item [L1CI04]	Understand ethical issues that relate to computers and networks (e.g., equity of access, security, privacy, copyright, and intellectual property).
	\item [L1CP04]	Gather and manipulate data using a variety of digital tools.
	\item [L1CP08]	Navigate between webpages using hyperlinks and conduct simple searches using search engines. 
\end{definition}
At this point in time, LS Newman curriculum is on track to meet the CSTA standards. Specific program recommendations are discussed in the next section.\par
% UPPER SCHOOL -------------------------------------------   
US \par

As of writing, CS exposure at Newman is largely self-guided and limited to a small group of students. Approximately 5 students are enrolled in Online Global Academy, an online platform offering courses in a variety of subject areas. The CS courses include: 
% http://www.globalonlineacademy.org/the-goa-experience/courses/
\begin{itemize}
\item Art of Code: Processing
\item Computer Programming I: Computational Thinking
\item Computer Programming I: Java
\item Computer Programming II: Advanced Java
\item Computer Programming II: Analyzing Data with Python
\item Computer Programming II: iOS Development
\end{itemize}

Students in Tech Club meet on a weekly basis to build and program their autonomous drone. Coding Club ostensibly engaged students in extracurricular CS, although, like many student groups, participation quickly waned as students got bored with online exercises. Several other students cite summer coding programs or online platforms like Kahn Academy for exposure to programming languages like Python and C++. Although a small handful of students are finding time and ways to code, Newman's Upper School is not providing adequate opportunities to develop critical foundational CS skills, nor is it reaching an adequate portion of the student body.  \par

Greg Malis, an US math teacher, argues that computer science fits into both science and math: ``What we do in math is explore patterns, algorithms, and there is no more concrete version of an algorithm than code." As for science: ``It fits. The ultimate goal of science is to formulate hypotheses, test, and debug. That, in a nutshell, is what coding's about." When asked about the role of computer science in K-12 education, Malis responded: ``Our job is to prepare students. If our students graduate without any exposure to coding, we aren't doing our job."

